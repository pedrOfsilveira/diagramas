Explicação do Diagrama de Sequência: Gerenciar Pedido de Amizade (Aceitar/Recusar)

Este diagrama de sequência ilustra o processo completo de gerenciamento de um pedido de amizade recebido por um usuário no aplicativo Blue Bee. Ele cobre os dois cenários principais: quando o usuário decide aceitar o pedido e quando decide recusá-lo, detalhando as interações entre o usuário, a interface, os componentes de controle e os serviços do sistema.

**Participantes (As Colunas Verticais no Diagrama):**

* **:Usuario (UserDestinatario)**: O ator que recebeu o pedido de amizade e toma a decisão de aceitar ou recusar.
* **:TelaPedidos (Tela)**: Representa a interface gráfica (por exemplo, uma caixa de entrada de convites) onde o usuário visualiza os pedidos pendentes e interage para gerenciá-los.
* **:PedidoController (Controller)**: O componente lógico que coordena o processamento da decisão do usuário (aceitar ou recusar), interagindo com os objetos de convite e o serviço de amizade.
* **:Convite (ConviteObj)**: Representa o objeto do convite de amizade específico que está sendo gerenciado. Ele armazena informações sobre o remetente, o destinatário e o status do convite.
* **:AmizadeService (AmizadeServ)**: Um serviço responsável por formalizar e registrar a relação de amizade entre os usuários, caso o pedido seja aceito.

**Fluxo Detalhado das Interações:**

1.  **Acesso à Lista de Pedidos:**
    * O `:UsuarioDestinatario` acessa a seção de "Pedidos de Amizade" através da `:TelaPedidos`. A tela é ativada.

2.  **Carregamento dos Pedidos Pendentes:**
    * A `:TelaPedidos` solicita ao `:PedidoController` que carregue os pedidos pendentes para o usuário atual. O `Controller` é ativado.
    * O `Controller` pede ao objeto `:Convite` para buscar os convites pendentes associados ao usuário. O `:ConviteObj` é ativado, busca os dados e retorna a `listaDeConvites`. O `:ConviteObj` é desativado.
    * O `Controller` envia a `listaDeConvites` para a `Tela` para exibição. O `Controller` é desativado.

3.  **Decisão do Usuário sobre o Pedido:**
    * A `:TelaPedidos` exibe a lista de convites.
    * O `:UsuarioDestinatario` seleciona um convite específico (`idConvite`) e clica no botão "Aceitar" ou no botão "Recusar", informando assim sua `acao`.

4.  **Processamento da Decisão pelo Controlador:**
    * A `:TelaPedidos` informa ao `:PedidoController` sobre a `acao` do usuário para o `idConvite` especificado. O `Controller` é ativado.
    * O `Controller` primeiro obtém os dados completos do convite (como o ID do remetente) do `:ConviteObj`. O `:ConviteObj` é ativado e retorna os dados. O `:ConviteObj` é desativado.

5.  **Tratamento da Ação (Bloco `alt / else`):**
    * **Caminho "Ação do Usuário é 'Aceitar'":**
        * O `Controller` instrui o `:ConviteObj` a `marcarComoAceito`. O `:ConviteObj` atualiza seu status e confirma.
        * O `Controller` solicita ao `:AmizadeService` para `registrarNovaAmizade` entre o destinatário (usuário atual) e o remetente. O `:AmizadeServ` cria o vínculo e confirma.
        * O `Controller` instrui o `:ConviteObj` a `arquivarConvite` (ou processá-lo como finalizado). O `:ConviteObj` executa a ação e confirma.
        * O `Controller` envia um `feedbackDecisao` de sucesso para a `Tela`.
    * **Caminho `else` "Ação do Usuário é 'Recusar'":**
        * O `Controller` instrui o `:ConviteObj` a `marcarComoRecusado`. O `:ConviteObj` atualiza seu status e confirma.
        * O `Controller` instrui o `:ConviteObj` a `arquivarOuRemoverConvite`. O `:ConviteObj` executa a ação (que pode ser diferente de quando é aceito) e confirma.
        * O `Controller` envia um `feedbackDecisao` de recusa para a `Tela`.

6.  **Finalização e Feedback:**
    * Após o processamento da ação (aceitar ou recusar), o `:PedidoController` é desativado.
    * A `:TelaPedidos` exibe o `Feedback da Decisão` ao `:UsuarioDestinatario`.
    * A `Tela` realiza uma auto-mensagem para `atualizarListaDePedidos`, removendo o convite processado da visualização.
    * A `:TelaPedidos` é desativada.

**Conclusão do Diagrama:**
Este diagrama de sequência unificado demonstra como o sistema lida com as duas principais ações de gerenciamento de um pedido de amizade: aceitar ou recusar. Ele mostra a coordenação entre a interface, a lógica de controle e os componentes de dados para atualizar o status dos convites e, se aplicável, criar novas relações de amizade, sempre fornecendo feedback ao usuário. Todas as construções seguem as diretrizes do PDF PlantUML fornecido.