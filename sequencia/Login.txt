Explicação do Diagrama de Sequência: Autenticação de Usuário (Login com Firebase)

Este diagrama de sequência descreve o processo passo a passo de como um usuário se autentica no aplicativo Blue Bee, utilizando o Firebase como um serviço externo para a verificação das credenciais. Ele detalha a ordem das mensagens trocadas entre o usuário, a interface do aplicativo e os componentes internos do sistema, incluindo o serviço de autenticação.

**Participantes (As Colunas Verticais no Diagrama):**

* **:Usuario (User)**: Representa a pessoa que está a tentar aceder ao aplicativo. É o ator que inicia o fluxo.
* **:TelaLogin (Tela)**: Simboliza a interface gráfica (a tela) onde o usuário insere suas informações de login.
* **:AuthController (Controller)**: Atua como o coordenador da lógica de autenticação dentro do aplicativo. Ele recebe os dados da tela e interage com o serviço de autenticação.
* **:ServicoFirebaseAuth (FirebaseAuth)**: Representa o componente do seu aplicativo que interage diretamente com o SDK ou API do Firebase Authentication. É ele quem efetivamente envia as credenciais para o Firebase e recebe a resposta.
* **:SessaoUsuario (Sessao)**: Um objeto que é criado para representar e gerenciar a sessão do usuário após um login bem-sucedido.

**Fluxo Detalhado das Interações (As Setas e Ações):**

1.  **Acesso à Funcionalidade:** O `:Usuario` começa por aceder à `:TelaLogin`. A `:TelaLogin` torna-se ativa, pronta para receber dados.

2.  **Entrada de Dados:** O `:Usuario` fornece o seu Email e Senha nos campos apropriados da `:TelaLogin` e, em seguida, clica no botão "Entrar".

3.  **Requisição de Login ao Controlador:** A `:TelaLogin` envia uma mensagem `requisitarLogin(email, senha)` para o `:AuthController`. Neste momento, o `:AuthController` é ativado e começa a processar o pedido de login.

4.  **Autenticação via Firebase:**
    * O `:AuthController` delega a tarefa de autenticação ao `:ServicoFirebaseAuth` através da mensagem `autenticarUsuario(email, senha)`.
    * O `:ServicoFirebaseAuth` é ativado. Uma nota no diagrama indica que este componente lida com a comunicação com o backend do Firebase (os detalhes internos dessa comunicação com os servidores do Firebase não são mostrados aqui, pois são responsabilidade do serviço externo).
    * Após a tentativa de autenticação, o `:ServicoFirebaseAuth` retorna o resultado (`resultadoAuth`) para o `Controller`. Este resultado pode indicar sucesso (incluindo informações como ID do usuário e um token de acesso) ou falha (com uma mensagem de erro). O `:ServicoFirebaseAuth` é então desativado.

5.  **Tratamento do Resultado da Autenticação (Bloco `alt`):** O fluxo agora se divide com base no resultado da autenticação:

    * **Caminho "Sucesso na Autenticação" (bloco com fundo `#LightGreen`):**
        * Primeiro, o `Controller` envia uma mensagem para si mesmo (`Controller -> Controller: Criar sessão de usuário`). Este é um passo preparatório ou de log interno antes da criação efetiva da sessão.
        * Em seguida, o `Controller` comanda a criação de um novo objeto `:SessaoUsuario` usando `create participant ":SessaoUsuario" as Sessao` e imediatamente envia uma mensagem `init(uid, token)` para inicializá-lo com os dados do usuário autenticado. O objeto `:SessaoUsuario` é ativado.
        * Uma nota indica que a "Nova sessão [foi] iniciada".
        * O objeto `:SessaoUsuario` confirma ao `Controller` que a `sessaoCriadaComSucesso` e é desativado.
        * O `Controller` informa à `:TelaLogin` sobre o `loginBemSucedido()`.
        * A `:TelaLogin` então redireciona o `:Usuario` para a tela principal do aplicativo (Dashboard).
        * Com o login bem-sucedido e o redirecionamento, tanto a `:TelaLogin` quanto o `:AuthController` são desativados, finalizando suas participações neste fluxo.

    * **Caminho "Falha na Autenticação" (bloco `else` com fundo `#LightCoral`):**
        * O `Controller` informa à `:TelaLogin` que o `loginFalhou(erroMsg)`, passando a mensagem de erro recebida.
        * A `:TelaLogin` exibe a mensagem de erro apropriada ao `:Usuario` (por exemplo, "Email ou senha inválidos").
        * O `:AuthController` é desativado, pois sua tarefa nesta tentativa de login terminou. A `:TelaLogin`, no entanto, permanece ativa, permitindo que o `:Usuario` possa tentar inserir as credenciais novamente.

6.  **Fim do Bloco Condicional:** A palavra-chave `end` marca o fim da estrutura `alt`, indicando que um dos caminhos alternativos foi concluído.

**Conclusão do Diagrama:**
Este diagrama de sequência demonstra de forma clara o fluxo de login no sistema Blue Bee, destacando a interação com um serviço de autenticação externo (Firebase) e o processo de criação de uma sessão de usuário. Ele visualiza as responsabilidades de cada componente e a ordem temporal das mensagens trocadas para completar (ou falhar) o processo de login.