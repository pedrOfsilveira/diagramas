Explicação do Diagrama de Sequência: Completar Desafio

Este diagrama de sequência ilustra as interações entre o usuário e o sistema Blue Bee quando o usuário tenta completar um desafio proposto. Ele mostra como um desafio é selecionado, como a solução do usuário é submetida e processada, e como o feedback e possíveis recompensas são entregues.

**Participantes (As Colunas Verticais no Diagrama):**

* **:Usuario (User)**: O ator que interage com a funcionalidade dos desafios.
* **:TelaDesafios (Tela)**: Representa a interface gráfica onde os desafios são listados e onde o usuário interage para completá-los.
* **:DesafioController (Controller)**: O componente lógico que gerencia o fluxo de completar um desafio, incluindo a validação da solução e a coordenação com outros serviços.
* **:Desafio (DesafioObj)**: Representa o objeto do desafio específico que o usuário está a tentar completar. Contém os critérios e a lógica para verificar uma solução.
* **:ProgressoService (ProgServ)**: Um serviço responsável por registrar o progresso do usuário, como marcar desafios como concluídos.
* **:RecompensaService (RecompServ)**: Um serviço responsável por conceder recompensas ou conquistas ao usuário após a conclusão bem-sucedida de um desafio.

**Fluxo Detalhado das Interações:**

1.  **Acesso e Seleção do Desafio:**
    * O `:Usuario` acessa a área de desafios através da `:TelaDesafios`. A tela é ativada.
    * A `:TelaDesafios` solicita ao `:DesafioController` os desafios disponíveis. O `Controller` é ativado.
    * O `Controller` retorna a `listaDesafios` para a `Tela`. O `Controller` é desativado.
    * O `:Usuario` seleciona um desafio específico (`desafioId`) na `:TelaDesafios`.

2.  **Início do Desafio:**
    * A `Tela` informa ao `Controller` qual desafio foi selecionado para ser iniciado (`iniciarDesafio`), passando o ID do usuário e do desafio. O `Controller` é ativado.
    * O `Controller` solicita ao objeto `:DesafioObj` (representando o desafio escolhido) os seus `detalhesDesafio`. O `:DesafioObj` é ativado e retorna os detalhes. O `:DesafioObj` é desativado.
    * O `Controller` envia os `detalhesDesafio` para a `:TelaDesafios` para que sejam exibidos. O `Controller` permanece ativo para gerenciar o estado do desafio.

3.  **Submissão da Solução pelo Usuário:**
    * A `:TelaDesafios` exibe o desafio para o `:Usuario`.
    * O `:Usuario` realiza as ações necessárias ou insere a solução para o desafio e submete através da `Tela`. A `Tela` é reativada para esta interação.
    * A `Tela` envia a `solucao` (ou os dados da tentativa) para o `:DesafioController` (`submeterSolucaoDesafio`).

4.  **Processamento e Feedback da Solução:**
    * O `:DesafioController` (que já estava ativo) pede ao `:DesafioObj` para `verificarSolucao`. O `:DesafioObj` é ativado.
    * O `:DesafioObj` processa a solução e retorna ao `Controller` o `resultadoSolucao`, que indica se o desafio `foiConcluido` e os `detalhesFeedback` apropriados. O `:DesafioObj` é desativado.

5.  **Tratamento do Resultado (Bloco `alt`):**
    * **Caminho "foiConcluido":** (Se a solução estiver correta e o desafio for completado)
        * O `Controller` informa o `:ProgressoService` para `marcarDesafioComoConcluido`. O `:ProgServ` é ativado, atualiza o progresso e confirma.
        * O `Controller` informa o `:RecompensaService` para `concederRecompensaDesafio`. O `:RecompServ` é ativado, processa a recompensa (que pode ser uma `:Conquista`) e retorna a `infoRecompensa`.
        * O `Controller` envia o `feedbackDesafio` (incluindo a `infoRecompensa`) para a `Tela`.
        * A `Tela` exibe ao `Usuario` a mensagem de "Desafio Concluído!", o feedback e a recompensa.
    * **Caminho `else` "não Foi Concluído ou Tentativa Incorreta":**
        * O `Controller` envia o `feedbackDesafio` (com os `detalhesFeedback` da tentativa) para a `Tela`.
        * A `Tela` exibe este feedback ao `Usuario` (que pode ser uma dica, uma mensagem de erro, ou um incentivo para tentar novamente).

6.  **Finalização da Interação:**
    * Após o tratamento do resultado, o `:DesafioController` e a `:TelaDesafios` são desativados, concluindo suas participações neste fluxo de completar o desafio.

**Conclusão do Diagrama:**
Este diagrama de sequência mostra a dinâmica da funcionalidade "Completar Desafio". Ele ilustra como o sistema apresenta o desafio, processa a tentativa do usuário, valida o resultado, interage com serviços para registrar progresso e conceder recompensas, e fornece feedback adequado ao usuário, tudo em conformidade com a sintaxe PlantUML do guia de referência e sem elementos visuais adicionais como cores ou comentários.